package hd.work.monadcard;

import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

public class Card2 extends Activity {
	private Button set1,frb,nexb;
	private TextView tv1,tv2;
	private DbAdapter mDbHelper;
	int i , j ;
	/**
	 * @param args
	 */
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.monadpage);
		set1 = (Button)findViewById(R.id.setb);
		frb = (Button)findViewById(R.id.frb);
		nexb = (Button)findViewById(R.id.neb);
		tv1 =(TextView)findViewById(R.id.wrod);
		tv2 =(TextView)findViewById(R.id.Chinese);
		 mDbHelper = new DbAdapter(this);//實體化DbAdapter.java中的DbAdapter.Class
	     mDbHelper.open();//開起DbAdapter.Class
	 
		  aradom();
		  loadrandom(1);
	      populateFields(j);
		
     nexb.setOnClickListener(new Button.OnClickListener(){
    	 public void onClick(View v) {
			// TODO 自動產生的方法 Stub
    		// redown();
    		 nexewd(i);
		}
    	 
     });
     set1.setOnClickListener(new Button.OnClickListener(){

		@Override
		public void onClick(View v) {
			// TODO 自動產生的方法 Stub
			  Intent intent = new Intent();
				intent.setClass(Card2.this,Setpage.class);
				startActivity(intent);
		}
    	 
     });
   
    frb.setOnClickListener(new Button.OnClickListener(){

		@Override
		public void onClick(View v) {
			// TODO 自動產生的方法 Stub
			int test = i;
			test = test-1;
			if(test <=1){
				Toast.makeText(Card2.this,"是第一個單字!!!",Toast.LENGTH_SHORT).show();
			}else{
			backwd(i); }
		
			
		}
    	
    });
	}
	
	  public int nexewd(int z){
		  int sum;
		  sum = z+1;
			      if(sum>99){
		    	  
		    	  aradom();
		    	  loadrandom(1);
			      populateFields(j);
		      }else{
		      loadrandom(sum);
		      populateFields(j);
		      }
		      	   i = sum;   
		            return i;
		    
		  }
		  public int backwd(int b){
			   int sum;
			    
			      sum = b-1;
			    
			      loadrandom(sum);
			      populateFields(j);
			    
			      i = sum; 	      
			            return i;
			    
			  }
		  private int loadrandom(int g){
		      int qq = g;
	            Cursor note = mDbHelper.radomAllNotes(qq);
	            startManagingCursor(note);
	            String  bb = note.getString(note.getColumnIndexOrThrow(DbAdapter.KEY_idnum));
	            int qb =  Integer.parseInt(bb);
	             j = qb;
	             return j;
	        
	    }
		  private void populateFields(int x) {
			      int qq = x;
		            Cursor note = mDbHelper.fetchNote(qq);
		            startManagingCursor(note);
		           tv1.setText(note.getString(
		                    note.getColumnIndexOrThrow(DbAdapter.KEY_wrod)));
		            tv2.setText(note.getString(
		                    note.getColumnIndexOrThrow(DbAdapter.KEY_chiness)));
		           
		        
		    }
		  public void aradom(){
		  Cursor gg = mDbHelper.fetchAllid();
				  startManagingCursor(gg);
				  int gb = gg.getCount();
				  for(int a=1;a<100;a++){
					 
				  int num = (int) (Math.random()*(gb-1))+1;
				  mDbHelper.updateradom(a, num);
							  
				  
				  }
				
		  }
		}

